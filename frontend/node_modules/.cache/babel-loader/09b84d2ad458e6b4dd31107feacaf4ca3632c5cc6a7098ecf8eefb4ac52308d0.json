{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejsproj\\\\api-assignment\\\\frontend\\\\src\\\\pages\\\\GetDevicesCount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetDevicesCount = () => {\n  _s();\n  const [counts, setCounts] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleGetDevicesCount = async () => {\n    setLoading(true);\n    setError(null); // Reset error state before fetching\n    try {\n      const result = await axios.get('http://localhost:5000/api/devicescount');\n      setCounts(result.data.counts); // Update to access `counts`\n    } catch (error) {\n      setError('Error fetching counts');\n      setCounts(null); // Reset counts in case of an error\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Devices Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetDevicesCount,\n      disabled: loading,\n      children: loading ? 'Fetching Counts...' : 'Get Counts'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), counts && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Devices created within one hour: \", counts.countWithinOneHour]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Devices created before one hour today: \", counts.countBeforeOneHour]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(GetDevicesCount, \"7li998vJ9kdxHcY/m0uImhQu3Yg=\");\n_c = GetDevicesCount;\nexport default GetDevicesCount;\nvar _c;\n$RefreshReg$(_c, \"GetDevicesCount\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GetDevicesCount","_s","counts","setCounts","loading","setLoading","error","setError","handleGetDevicesCount","result","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","countWithinOneHour","countBeforeOneHour","_c","$RefreshReg$"],"sources":["C:/nodejsproj/api-assignment/frontend/src/pages/GetDevicesCount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GetDevicesCount = () => {\r\n  const [counts, setCounts] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleGetDevicesCount = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error state before fetching\r\n    try {\r\n      const result = await axios.get('http://localhost:5000/api/devicescount');\r\n      setCounts(result.data.counts); // Update to access `counts`\r\n    } catch (error) {\r\n      setError('Error fetching counts');\r\n      setCounts(null); // Reset counts in case of an error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Devices Count</h2>\r\n      <button onClick={handleGetDevicesCount} disabled={loading}>\r\n        {loading ? 'Fetching Counts...' : 'Get Counts'}\r\n      </button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {counts && !error && (\r\n        <div>\r\n          <p>Devices created within one hour: {counts.countWithinOneHour}</p>\r\n          <p>Devices created before one hour today: {counts.countBeforeOneHour}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetDevicesCount;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxCH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChB,IAAI;MACF,MAAME,MAAM,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,wCAAwC,CAAC;MACxEP,SAAS,CAACM,MAAM,CAACE,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,QAAQ,CAAC,uBAAuB,CAAC;MACjCJ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MAAQkB,OAAO,EAAET,qBAAsB;MAACU,QAAQ,EAAEd,OAAQ;MAAAQ,QAAA,EACvDR,OAAO,GAAG,oBAAoB,GAAG;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACRV,KAAK,iBAAIP,OAAA;MAAGoB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAR,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDd,MAAM,IAAI,CAACI,KAAK,iBACfP,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAG,mCAAiC,EAACV,MAAM,CAACmB,kBAAkB;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEjB,OAAA;QAAAa,QAAA,GAAG,yCAAuC,EAACV,MAAM,CAACoB,kBAAkB;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAlCID,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AAoCrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}