{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GetDevicesCount=()=>{const[count,setCount]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const handleGetDevicesCount=async()=>{setLoading(true);setError(null);// Reset error state before fetching\ntry{const result=await axios.get('http://localhost:5000/api/devices/count');setCount(result.data.count);}catch(error){setError('Error fetching count');setCount(null);// Reset count in case of an error\n}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Devices Count\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGetDevicesCount,disabled:loading,children:loading?'Fetching Count...':'Get Count'}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),count!==null&&!error&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Devices: \",count]})]});};export default GetDevicesCount;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","GetDevicesCount","count","setCount","loading","setLoading","error","setError","handleGetDevicesCount","result","get","data","children","onClick","disabled","style","color"],"sources":["C:/nodejsproj/api-assignment/frontend/src/pages/GetDevicesCount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GetDevicesCount = () => {\r\n  const [count, setCount] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleGetDevicesCount = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error state before fetching\r\n    try {\r\n      const result = await axios.get('http://localhost:5000/api/devices/count');\r\n      setCount(result.data.count);\r\n    } catch (error) {\r\n      setError('Error fetching count');\r\n      setCount(null); // Reset count in case of an error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Devices Count</h2>\r\n      <button onClick={handleGetDevicesCount} disabled={loading}>\r\n        {loading ? 'Fetching Count...' : 'Get Count'}\r\n      </button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {count !== null && !error && <p>Total Devices: {count}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetDevicesCount;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAa,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CACxCH,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAAE;AAChB,GAAI,CACF,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAAb,KAAK,CAACc,GAAG,CAAC,yCAAyC,CAAC,CACzEP,QAAQ,CAACM,MAAM,CAACE,IAAI,CAACT,KAAK,CAAC,CAC7B,CAAE,MAAOI,KAAK,CAAE,CACdC,QAAQ,CAAC,sBAAsB,CAAC,CAChCJ,QAAQ,CAAC,IAAI,CAAC,CAAE;AAClB,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEL,KAAA,QAAAY,QAAA,eACEd,IAAA,OAAAc,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBd,IAAA,WAAQe,OAAO,CAAEL,qBAAsB,CAACM,QAAQ,CAAEV,OAAQ,CAAAQ,QAAA,CACvDR,OAAO,CAAG,mBAAmB,CAAG,WAAW,CACtC,CAAC,CACRE,KAAK,eAAIR,IAAA,MAAGiB,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAJ,QAAA,CAAEN,KAAK,CAAI,CAAC,CAChDJ,KAAK,GAAK,IAAI,EAAI,CAACI,KAAK,eAAIN,KAAA,MAAAY,QAAA,EAAG,iBAAe,CAACV,KAAK,EAAI,CAAC,EACvD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}