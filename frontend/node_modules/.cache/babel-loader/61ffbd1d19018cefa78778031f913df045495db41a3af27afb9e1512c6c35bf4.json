{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejsproj\\\\api-assignment\\\\frontend\\\\src\\\\pages\\\\GetDevicesCount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Chart, PieController, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(PieController, ArcElement, Tooltip, Legend);\nconst GetDevicesCount = () => {\n  _s();\n  const [counts, setCounts] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const handleGetDevicesCount = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await axios.get('http://localhost:5000/api/devicescount');\n      const data = result.data.counts;\n      setCounts(data);\n\n      // Update the chart\n      if (chartInstance) {\n        chartInstance.data.datasets[0].data = [data.countWithinOneHour, data.countBeforeOneHour];\n        chartInstance.update();\n      } else {\n        initializeChart(data);\n      }\n    } catch (error) {\n      setError('Error fetching counts');\n      setCounts(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const initializeChart = data => {\n    const ctx = document.getElementById('deviceChart').getContext('2d');\n    const newChartInstance = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: ['Created within the last hour', 'Created before one hour'],\n        datasets: [{\n          label: 'Device Count',\n          data: [data.countWithinOneHour, data.countBeforeOneHour],\n          backgroundColor: ['#36A2EB', '#FF6384'],\n          borderColor: ['#36A2EB', '#FF6384'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                return `${tooltipItem.label}: ${tooltipItem.raw}`;\n              }\n            }\n          }\n        }\n      }\n    });\n    setChartInstance(newChartInstance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Devices Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetDevicesCount,\n      disabled: loading,\n      children: loading ? 'Fetching Counts...' : 'Get Counts'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), counts && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Devices created within one hour: \", counts.countWithinOneHour]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Devices created before one hour today: \", counts.countBeforeOneHour]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"deviceChart\",\n      width: \"200\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(GetDevicesCount, \"Iq8w0QnrZpsdYjwPsaKenE6ZLCk=\");\n_c = GetDevicesCount;\nexport default GetDevicesCount;\nvar _c;\n$RefreshReg$(_c, \"GetDevicesCount\");","map":{"version":3,"names":["React","useState","axios","Chart","PieController","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","GetDevicesCount","_s","counts","setCounts","loading","setLoading","error","setError","chartInstance","setChartInstance","handleGetDevicesCount","result","get","data","datasets","countWithinOneHour","countBeforeOneHour","update","initializeChart","ctx","document","getElementById","getContext","newChartInstance","type","labels","label","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","raw","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","id","width","height","_c","$RefreshReg$"],"sources":["C:/nodejsproj/api-assignment/frontend/src/pages/GetDevicesCount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Chart, PieController, ArcElement, Tooltip, Legend } from 'chart.js';\r\n\r\nChart.register(PieController, ArcElement, Tooltip, Legend);\r\n\r\nconst GetDevicesCount = () => {\r\n  const [counts, setCounts] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n\r\n  const handleGetDevicesCount = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const result = await axios.get('http://localhost:5000/api/devicescount');\r\n      const data = result.data.counts;\r\n      setCounts(data);\r\n\r\n      // Update the chart\r\n      if (chartInstance) {\r\n        chartInstance.data.datasets[0].data = [\r\n          data.countWithinOneHour,\r\n          data.countBeforeOneHour,\r\n        ];\r\n        chartInstance.update();\r\n      } else {\r\n        initializeChart(data);\r\n      }\r\n    } catch (error) {\r\n      setError('Error fetching counts');\r\n      setCounts(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const initializeChart = (data) => {\r\n    const ctx = document.getElementById('deviceChart').getContext('2d');\r\n    const newChartInstance = new Chart(ctx, {\r\n      type: 'pie',\r\n      data: {\r\n        labels: ['Created within the last hour', 'Created before one hour'],\r\n        datasets: [\r\n          {\r\n            label: 'Device Count',\r\n            data: [data.countWithinOneHour, data.countBeforeOneHour],\r\n            backgroundColor: ['#36A2EB', '#FF6384'],\r\n            borderColor: ['#36A2EB', '#FF6384'],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: { position: 'top' },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: (tooltipItem) => {\r\n                return `${tooltipItem.label}: ${tooltipItem.raw}`;\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n    setChartInstance(newChartInstance);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Devices Count</h2>\r\n      <button onClick={handleGetDevicesCount} disabled={loading}>\r\n        {loading ? 'Fetching Counts...' : 'Get Counts'}\r\n      </button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {counts && (\r\n        <div>\r\n          <p>Devices created within one hour: {counts.countWithinOneHour}</p>\r\n          <p>Devices created before one hour today: {counts.countBeforeOneHour}</p>\r\n        </div>\r\n      )}\r\n      <canvas id=\"deviceChart\" width=\"200\" height=\"200\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetDevicesCount;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}