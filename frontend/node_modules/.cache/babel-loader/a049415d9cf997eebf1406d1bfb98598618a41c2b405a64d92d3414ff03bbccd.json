{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejsproj\\\\api-assignment\\\\frontend\\\\src\\\\pages\\\\GetAllDevices.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetAllDevices = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleGetAllDevices = async () => {\n    setLoading(true);\n    setError(null); // Reset error state on new fetch attempt\n    try {\n      const result = await axios.get('http://localhost:5000/api/devices');\n      setDevices(result.data || []);\n    } catch (error) {\n      setError('Failed to fetch devices.');\n      setDevices([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetAllDevices,\n      disabled: loading,\n      children: loading ? 'Fetching Devices...' : 'Fetch Devices'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No devices available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this) : devices.map((device, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: device.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(GetAllDevices, \"i1gAEZV84GD5D4l0WrisQpRVYHE=\");\n_c = GetAllDevices;\nexport default GetAllDevices;\nvar _c;\n$RefreshReg$(_c, \"GetAllDevices\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GetAllDevices","_s","devices","setDevices","loading","setLoading","error","setError","handleGetAllDevices","result","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","length","map","device","index","name","_c","$RefreshReg$"],"sources":["C:/nodejsproj/api-assignment/frontend/src/pages/GetAllDevices.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GetAllDevices = () => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleGetAllDevices = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error state on new fetch attempt\r\n    try {\r\n      const result = await axios.get('http://localhost:5000/api/devices');\r\n      setDevices(result.data || []);\r\n    } catch (error) {\r\n      setError('Failed to fetch devices.');\r\n      setDevices([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>All Devices</h2>\r\n      <button onClick={handleGetAllDevices} disabled={loading}>\r\n        {loading ? 'Fetching Devices...' : 'Fetch Devices'}\r\n      </button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <ul>\r\n        {devices.length === 0 ? (\r\n          <li>No devices available.</li>\r\n        ) : (\r\n          devices.map((device, index) => (\r\n            <li key={index}>{device.name}</li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetAllDevices;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtCH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChB,IAAI;MACF,MAAME,MAAM,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,mCAAmC,CAAC;MACnEP,UAAU,CAACM,MAAM,CAACE,IAAI,IAAI,EAAE,CAAC;IAC/B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,QAAQ,CAAC,0BAA0B,CAAC;MACpCJ,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjB,OAAA;MAAQkB,OAAO,EAAET,mBAAoB;MAACU,QAAQ,EAAEd,OAAQ;MAAAQ,QAAA,EACrDR,OAAO,GAAG,qBAAqB,GAAG;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EACRV,KAAK,iBAAIP,OAAA;MAAGoB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAR,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDjB,OAAA;MAAAa,QAAA,EACGV,OAAO,CAACmB,MAAM,KAAK,CAAC,gBACnBtB,OAAA;QAAAa,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GAE9Bd,OAAO,CAACoB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxBzB,OAAA;QAAAa,QAAA,EAAiBW,MAAM,CAACE;MAAI,GAAnBD,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAClC;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CArCID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}