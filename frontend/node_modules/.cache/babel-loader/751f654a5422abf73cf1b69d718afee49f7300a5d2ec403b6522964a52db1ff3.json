{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejsproj\\\\api-assignment\\\\frontend\\\\src\\\\pages\\\\GetDevicesCount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetDevicesCount = () => {\n  _s();\n  const [count, setCount] = useState(null);\n  const handleGetDevicesCount = async () => {\n    try {\n      const result = await axios.get('http://localhost:5000/api/devices/count');\n      setCount(result.data.count);\n    } catch (error) {\n      setCount('Error fetching count');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Devices Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetDevicesCount,\n      children: \"Get Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), count !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Devices: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(GetDevicesCount, \"se03UwgvFtnB7Ka+34SxvWoS9WM=\");\n_c = GetDevicesCount;\nexport default GetDevicesCount;\nvar _c;\n$RefreshReg$(_c, \"GetDevicesCount\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GetDevicesCount","_s","count","setCount","handleGetDevicesCount","result","get","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/nodejsproj/api-assignment/frontend/src/pages/GetDevicesCount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GetDevicesCount = () => {\r\n  const [count, setCount] = useState(null);\r\n\r\n  const handleGetDevicesCount = async () => {\r\n    try {\r\n      const result = await axios.get('http://localhost:5000/api/devices/count');\r\n      setCount(result.data.count);\r\n    } catch (error) {\r\n      setCount('Error fetching count');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Devices Count</h2>\r\n      <button onClick={handleGetDevicesCount}>Get Count</button>\r\n      {count !== null && <p>Total Devices: {count}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetDevicesCount;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,yCAAyC,CAAC;MACzEH,QAAQ,CAACE,MAAM,CAACE,IAAI,CAACL,KAAK,CAAC;IAC7B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdL,QAAQ,CAAC,sBAAsB,CAAC;IAClC;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBd,OAAA;MAAQe,OAAO,EAAEV,qBAAsB;MAAAK,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzDX,KAAK,KAAK,IAAI,iBAAIH,OAAA;MAAAU,QAAA,GAAG,iBAAe,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACZ,EAAA,CAnBID,eAAe;AAAAe,EAAA,GAAff,eAAe;AAqBrB,eAAeA,eAAe;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}