{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejsproj\\\\api-assignment\\\\frontend\\\\src\\\\pages\\\\AddDevice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './AddDevice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddDevice = () => {\n  _s();\n  const [deviceName, setDeviceName] = useState('');\n  const [response, setResponse] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleAddDevice = async e => {\n    e.preventDefault();\n    if (!deviceName.trim()) {\n      setResponse('Device name cannot be empty.');\n      return;\n    }\n    setIsLoading(true); // Show loader or disable button\n    try {\n      const result = await axios.post('http://localhost:5000/api/devices', {\n        name: deviceName\n      });\n      setResponse(result.data.message || 'Device Added Successfully!');\n      setDeviceName(''); // Clear input field\n    } catch (error) {\n      setResponse('Failed to Add Device! Please try again.');\n    } finally {\n      setIsLoading(false); // Hide loader or enable button\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-device-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddDevice,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deviceName\",\n          children: \"Device Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"deviceName\",\n          type: \"text\",\n          placeholder: \"Enter Device Name\",\n          value: deviceName,\n          onChange: e => setDeviceName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Adding...' : 'Add Device'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-message\",\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AddDevice, \"MVAs3yurJmyQB0y3as3UQ73yEFQ=\");\n_c = AddDevice;\nexport default AddDevice;\nvar _c;\n$RefreshReg$(_c, \"AddDevice\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddDevice","_s","deviceName","setDeviceName","response","setResponse","isLoading","setIsLoading","handleAddDevice","e","preventDefault","trim","result","post","name","data","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/nodejsproj/api-assignment/frontend/src/pages/AddDevice.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AddDevice.css';\r\n\r\nconst AddDevice = () => {\r\n  const [deviceName, setDeviceName] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleAddDevice = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!deviceName.trim()) {\r\n      setResponse('Device name cannot be empty.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Show loader or disable button\r\n    try {\r\n      const result = await axios.post('http://localhost:5000/api/devices', { name: deviceName });\r\n      setResponse(result.data.message || 'Device Added Successfully!');\r\n      setDeviceName(''); // Clear input field\r\n    } catch (error) {\r\n      setResponse('Failed to Add Device! Please try again.');\r\n    } finally {\r\n      setIsLoading(false); // Hide loader or enable button\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-device-container\">\r\n      <h2>Add Device</h2>\r\n      <form onSubmit={handleAddDevice}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"deviceName\">Device Name:</label>\r\n          <input\r\n            id=\"deviceName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Device Name\"\r\n            value={deviceName}\r\n            onChange={(e) => setDeviceName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Adding...' : 'Add Device'}\r\n        </button>\r\n      </form>\r\n      {response && <p className=\"response-message\">{response}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddDevice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}