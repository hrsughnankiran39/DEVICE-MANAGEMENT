{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GetAllDevices=()=>{const[devices,setDevices]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const handleGetAllDevices=async()=>{setLoading(true);setError(null);// Reset error state on new fetch attempt\ntry{const result=await axios.get('http://localhost:5000/api/devices');setDevices(result.data||[]);}catch(error){setError('Failed to fetch devices.');setDevices([]);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"All Devices\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGetAllDevices,disabled:loading,children:loading?'Fetching Devices...':'Fetch Devices'}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"ul\",{children:devices.length===0?/*#__PURE__*/_jsx(\"li\",{children:\"No devices available.\"}):devices.map((device,index)=>/*#__PURE__*/_jsx(\"li\",{children:device.name},index))})]});};export default GetAllDevices;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","GetAllDevices","devices","setDevices","loading","setLoading","error","setError","handleGetAllDevices","result","get","data","children","onClick","disabled","style","color","length","map","device","index","name"],"sources":["C:/nodejsproj/api-assignment/frontend/src/pages/GetAllDevices.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GetAllDevices = () => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleGetAllDevices = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error state on new fetch attempt\r\n    try {\r\n      const result = await axios.get('http://localhost:5000/api/devices');\r\n      setDevices(result.data || []);\r\n    } catch (error) {\r\n      setError('Failed to fetch devices.');\r\n      setDevices([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>All Devices</h2>\r\n      <button onClick={handleGetAllDevices} disabled={loading}>\r\n        {loading ? 'Fetching Devices...' : 'Fetch Devices'}\r\n      </button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <ul>\r\n        {devices.length === 0 ? (\r\n          <li>No devices available.</li>\r\n        ) : (\r\n          devices.map((device, index) => (\r\n            <li key={index}>{device.name}</li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetAllDevices;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAa,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtCH,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAAE;AAChB,GAAI,CACF,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAAb,KAAK,CAACc,GAAG,CAAC,mCAAmC,CAAC,CACnEP,UAAU,CAACM,MAAM,CAACE,IAAI,EAAI,EAAE,CAAC,CAC/B,CAAE,MAAOL,KAAK,CAAE,CACdC,QAAQ,CAAC,0BAA0B,CAAC,CACpCJ,UAAU,CAAC,EAAE,CAAC,CAChB,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEL,KAAA,QAAAY,QAAA,eACEd,IAAA,OAAAc,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBd,IAAA,WAAQe,OAAO,CAAEL,mBAAoB,CAACM,QAAQ,CAAEV,OAAQ,CAAAQ,QAAA,CACrDR,OAAO,CAAG,qBAAqB,CAAG,eAAe,CAC5C,CAAC,CACRE,KAAK,eAAIR,IAAA,MAAGiB,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAJ,QAAA,CAAEN,KAAK,CAAI,CAAC,cACjDR,IAAA,OAAAc,QAAA,CACGV,OAAO,CAACe,MAAM,GAAK,CAAC,cACnBnB,IAAA,OAAAc,QAAA,CAAI,uBAAqB,CAAI,CAAC,CAE9BV,OAAO,CAACgB,GAAG,CAAC,CAACC,MAAM,CAAEC,KAAK,gBACxBtB,IAAA,OAAAc,QAAA,CAAiBO,MAAM,CAACE,IAAI,EAAnBD,KAAwB,CAClC,CACF,CACC,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}